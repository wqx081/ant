// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ant/tests/rpc/rtest_diff_package.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ant/tests/rpc/rtest_diff_package.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ant {
namespace rpc_test_diff_package {

namespace {

const ::google::protobuf::Descriptor* ReqDiffPackagePB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqDiffPackagePB_reflection_ = NULL;
const ::google::protobuf::Descriptor* RespDiffPackagePB_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RespDiffPackagePB_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto() {
  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ant/tests/rpc/rtest_diff_package.proto");
  GOOGLE_CHECK(file != NULL);
  ReqDiffPackagePB_descriptor_ = file->message_type(0);
  static const int ReqDiffPackagePB_offsets_[1] = {
  };
  ReqDiffPackagePB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReqDiffPackagePB_descriptor_,
      ReqDiffPackagePB::default_instance_,
      ReqDiffPackagePB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqDiffPackagePB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqDiffPackagePB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReqDiffPackagePB));
  RespDiffPackagePB_descriptor_ = file->message_type(1);
  static const int RespDiffPackagePB_offsets_[1] = {
  };
  RespDiffPackagePB_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RespDiffPackagePB_descriptor_,
      RespDiffPackagePB::default_instance_,
      RespDiffPackagePB_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespDiffPackagePB, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespDiffPackagePB, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RespDiffPackagePB));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReqDiffPackagePB_descriptor_, &ReqDiffPackagePB::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RespDiffPackagePB_descriptor_, &RespDiffPackagePB::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto() {
  delete ReqDiffPackagePB::default_instance_;
  delete ReqDiffPackagePB_reflection_;
  delete RespDiffPackagePB::default_instance_;
  delete RespDiffPackagePB_reflection_;
}

void protobuf_AddDesc_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n&ant/tests/rpc/rtest_diff_package.proto"
    "\022\031ant.rpc_test_diff_package\"\022\n\020ReqDiffPa"
    "ckagePB\"\023\n\021RespDiffPackagePB", 108);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ant/tests/rpc/rtest_diff_package.proto", &protobuf_RegisterTypes);
  ReqDiffPackagePB::default_instance_ = new ReqDiffPackagePB();
  RespDiffPackagePB::default_instance_ = new RespDiffPackagePB();
  ReqDiffPackagePB::default_instance_->InitAsDefaultInstance();
  RespDiffPackagePB::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto {
  StaticDescriptorInitializer_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto() {
    protobuf_AddDesc_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto();
  }
} static_descriptor_initializer_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ReqDiffPackagePB::ReqDiffPackagePB()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ant.rpc_test_diff_package.ReqDiffPackagePB)
}

void ReqDiffPackagePB::InitAsDefaultInstance() {
}

ReqDiffPackagePB::ReqDiffPackagePB(const ReqDiffPackagePB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ant.rpc_test_diff_package.ReqDiffPackagePB)
}

void ReqDiffPackagePB::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqDiffPackagePB::~ReqDiffPackagePB() {
  // @@protoc_insertion_point(destructor:ant.rpc_test_diff_package.ReqDiffPackagePB)
  SharedDtor();
}

void ReqDiffPackagePB::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReqDiffPackagePB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqDiffPackagePB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqDiffPackagePB_descriptor_;
}

const ReqDiffPackagePB& ReqDiffPackagePB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto();
  return *default_instance_;
}

ReqDiffPackagePB* ReqDiffPackagePB::default_instance_ = NULL;

ReqDiffPackagePB* ReqDiffPackagePB::New() const {
  return new ReqDiffPackagePB;
}

void ReqDiffPackagePB::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReqDiffPackagePB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ant.rpc_test_diff_package.ReqDiffPackagePB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ant.rpc_test_diff_package.ReqDiffPackagePB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ant.rpc_test_diff_package.ReqDiffPackagePB)
  return false;
#undef DO_
}

void ReqDiffPackagePB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ant.rpc_test_diff_package.ReqDiffPackagePB)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ant.rpc_test_diff_package.ReqDiffPackagePB)
}

::google::protobuf::uint8* ReqDiffPackagePB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ant.rpc_test_diff_package.ReqDiffPackagePB)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ant.rpc_test_diff_package.ReqDiffPackagePB)
  return target;
}

int ReqDiffPackagePB::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqDiffPackagePB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReqDiffPackagePB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReqDiffPackagePB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReqDiffPackagePB::MergeFrom(const ReqDiffPackagePB& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReqDiffPackagePB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqDiffPackagePB::CopyFrom(const ReqDiffPackagePB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqDiffPackagePB::IsInitialized() const {

  return true;
}

void ReqDiffPackagePB::Swap(ReqDiffPackagePB* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReqDiffPackagePB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqDiffPackagePB_descriptor_;
  metadata.reflection = ReqDiffPackagePB_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

RespDiffPackagePB::RespDiffPackagePB()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ant.rpc_test_diff_package.RespDiffPackagePB)
}

void RespDiffPackagePB::InitAsDefaultInstance() {
}

RespDiffPackagePB::RespDiffPackagePB(const RespDiffPackagePB& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ant.rpc_test_diff_package.RespDiffPackagePB)
}

void RespDiffPackagePB::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RespDiffPackagePB::~RespDiffPackagePB() {
  // @@protoc_insertion_point(destructor:ant.rpc_test_diff_package.RespDiffPackagePB)
  SharedDtor();
}

void RespDiffPackagePB::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RespDiffPackagePB::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RespDiffPackagePB::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RespDiffPackagePB_descriptor_;
}

const RespDiffPackagePB& RespDiffPackagePB::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ant_2ftests_2frpc_2frtest_5fdiff_5fpackage_2eproto();
  return *default_instance_;
}

RespDiffPackagePB* RespDiffPackagePB::default_instance_ = NULL;

RespDiffPackagePB* RespDiffPackagePB::New() const {
  return new RespDiffPackagePB;
}

void RespDiffPackagePB::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RespDiffPackagePB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ant.rpc_test_diff_package.RespDiffPackagePB)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ant.rpc_test_diff_package.RespDiffPackagePB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ant.rpc_test_diff_package.RespDiffPackagePB)
  return false;
#undef DO_
}

void RespDiffPackagePB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ant.rpc_test_diff_package.RespDiffPackagePB)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ant.rpc_test_diff_package.RespDiffPackagePB)
}

::google::protobuf::uint8* RespDiffPackagePB::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ant.rpc_test_diff_package.RespDiffPackagePB)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ant.rpc_test_diff_package.RespDiffPackagePB)
  return target;
}

int RespDiffPackagePB::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RespDiffPackagePB::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RespDiffPackagePB* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RespDiffPackagePB*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RespDiffPackagePB::MergeFrom(const RespDiffPackagePB& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RespDiffPackagePB::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespDiffPackagePB::CopyFrom(const RespDiffPackagePB& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespDiffPackagePB::IsInitialized() const {

  return true;
}

void RespDiffPackagePB::Swap(RespDiffPackagePB* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RespDiffPackagePB::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RespDiffPackagePB_descriptor_;
  metadata.reflection = RespDiffPackagePB_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc_test_diff_package
}  // namespace ant

// @@protoc_insertion_point(global_scope)
