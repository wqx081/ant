// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ant/tests/rpc/rtest.proto

#ifndef PROTOBUF_ant_2ftests_2frpc_2frtest_2eproto__INCLUDED
#define PROTOBUF_ant_2ftests_2frpc_2frtest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ant/rpc/rpc_header.pb.h"
#include "ant/tests/rpc/rtest_diff_package.pb.h"
// @@protoc_insertion_point(includes)

namespace ant {
namespace rpc_test {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

class AddRequestPB;
class AddRequestPartialPB;
class AddResponsePB;
class SleepRequestPB;
class SleepResponsePB;
class SendTwoStringsRequestPB;
class SendTwoStringsResponsePB;
class EchoRequestPB;
class EchoResponsePB;
class WhoAmIRequestPB;
class WhoAmIResponsePB;
class CalculatorError;
class PanicRequestPB;
class PanicResponsePB;
class TestInvalidResponseRequestPB;
class TestInvalidResponseResponsePB;
class ExactlyOnceRequestPB;
class ExactlyOnceResponsePB;

enum TestInvalidResponseRequestPB_ErrorType {
  TestInvalidResponseRequestPB_ErrorType_MISSING_REQUIRED_FIELD = 1,
  TestInvalidResponseRequestPB_ErrorType_RESPONSE_TOO_LARGE = 2
};
bool TestInvalidResponseRequestPB_ErrorType_IsValid(int value);
const TestInvalidResponseRequestPB_ErrorType TestInvalidResponseRequestPB_ErrorType_ErrorType_MIN = TestInvalidResponseRequestPB_ErrorType_MISSING_REQUIRED_FIELD;
const TestInvalidResponseRequestPB_ErrorType TestInvalidResponseRequestPB_ErrorType_ErrorType_MAX = TestInvalidResponseRequestPB_ErrorType_RESPONSE_TOO_LARGE;
const int TestInvalidResponseRequestPB_ErrorType_ErrorType_ARRAYSIZE = TestInvalidResponseRequestPB_ErrorType_ErrorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestInvalidResponseRequestPB_ErrorType_descriptor();
inline const ::std::string& TestInvalidResponseRequestPB_ErrorType_Name(TestInvalidResponseRequestPB_ErrorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestInvalidResponseRequestPB_ErrorType_descriptor(), value);
}
inline bool TestInvalidResponseRequestPB_ErrorType_Parse(
    const ::std::string& name, TestInvalidResponseRequestPB_ErrorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestInvalidResponseRequestPB_ErrorType>(
    TestInvalidResponseRequestPB_ErrorType_descriptor(), name, value);
}
enum FeatureFlags {
  UNKNOWN = 0,
  FOO = 1
};
bool FeatureFlags_IsValid(int value);
const FeatureFlags FeatureFlags_MIN = UNKNOWN;
const FeatureFlags FeatureFlags_MAX = FOO;
const int FeatureFlags_ARRAYSIZE = FeatureFlags_MAX + 1;

const ::google::protobuf::EnumDescriptor* FeatureFlags_descriptor();
inline const ::std::string& FeatureFlags_Name(FeatureFlags value) {
  return ::google::protobuf::internal::NameOfEnum(
    FeatureFlags_descriptor(), value);
}
inline bool FeatureFlags_Parse(
    const ::std::string& name, FeatureFlags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FeatureFlags>(
    FeatureFlags_descriptor(), name, value);
}
// ===================================================================

class AddRequestPB : public ::google::protobuf::Message {
 public:
  AddRequestPB();
  virtual ~AddRequestPB();

  AddRequestPB(const AddRequestPB& from);

  inline AddRequestPB& operator=(const AddRequestPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRequestPB& default_instance();

  void Swap(AddRequestPB* other);

  // implements Message ----------------------------------------------

  AddRequestPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddRequestPB& from);
  void MergeFrom(const AddRequestPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // required uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.AddRequestPB)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static AddRequestPB* default_instance_;
};
// -------------------------------------------------------------------

class AddRequestPartialPB : public ::google::protobuf::Message {
 public:
  AddRequestPartialPB();
  virtual ~AddRequestPartialPB();

  AddRequestPartialPB(const AddRequestPartialPB& from);

  inline AddRequestPartialPB& operator=(const AddRequestPartialPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRequestPartialPB& default_instance();

  void Swap(AddRequestPartialPB* other);

  // implements Message ----------------------------------------------

  AddRequestPartialPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddRequestPartialPB& from);
  void MergeFrom(const AddRequestPartialPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.AddRequestPartialPB)
 private:
  inline void set_has_x();
  inline void clear_has_x();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 x_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static AddRequestPartialPB* default_instance_;
};
// -------------------------------------------------------------------

class AddResponsePB : public ::google::protobuf::Message {
 public:
  AddResponsePB();
  virtual ~AddResponsePB();

  AddResponsePB(const AddResponsePB& from);

  inline AddResponsePB& operator=(const AddResponsePB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddResponsePB& default_instance();

  void Swap(AddResponsePB* other);

  // implements Message ----------------------------------------------

  AddResponsePB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddResponsePB& from);
  void MergeFrom(const AddResponsePB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.AddResponsePB)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static AddResponsePB* default_instance_;
};
// -------------------------------------------------------------------

class SleepRequestPB : public ::google::protobuf::Message {
 public:
  SleepRequestPB();
  virtual ~SleepRequestPB();

  SleepRequestPB(const SleepRequestPB& from);

  inline SleepRequestPB& operator=(const SleepRequestPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SleepRequestPB& default_instance();

  void Swap(SleepRequestPB* other);

  // implements Message ----------------------------------------------

  SleepRequestPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SleepRequestPB& from);
  void MergeFrom(const SleepRequestPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sleep_micros = 1;
  inline bool has_sleep_micros() const;
  inline void clear_sleep_micros();
  static const int kSleepMicrosFieldNumber = 1;
  inline ::google::protobuf::uint32 sleep_micros() const;
  inline void set_sleep_micros(::google::protobuf::uint32 value);

  // optional bool deferred = 2 [default = false];
  inline bool has_deferred() const;
  inline void clear_deferred();
  static const int kDeferredFieldNumber = 2;
  inline bool deferred() const;
  inline void set_deferred(bool value);

  // optional bool return_app_error = 3 [default = false];
  inline bool has_return_app_error() const;
  inline void clear_return_app_error();
  static const int kReturnAppErrorFieldNumber = 3;
  inline bool return_app_error() const;
  inline void set_return_app_error(bool value);

  // optional bool client_timeout_defined = 4 [default = false];
  inline bool has_client_timeout_defined() const;
  inline void clear_client_timeout_defined();
  static const int kClientTimeoutDefinedFieldNumber = 4;
  inline bool client_timeout_defined() const;
  inline void set_client_timeout_defined(bool value);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.SleepRequestPB)
 private:
  inline void set_has_sleep_micros();
  inline void clear_has_sleep_micros();
  inline void set_has_deferred();
  inline void clear_has_deferred();
  inline void set_has_return_app_error();
  inline void clear_has_return_app_error();
  inline void set_has_client_timeout_defined();
  inline void clear_has_client_timeout_defined();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sleep_micros_;
  bool deferred_;
  bool return_app_error_;
  bool client_timeout_defined_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static SleepRequestPB* default_instance_;
};
// -------------------------------------------------------------------

class SleepResponsePB : public ::google::protobuf::Message {
 public:
  SleepResponsePB();
  virtual ~SleepResponsePB();

  SleepResponsePB(const SleepResponsePB& from);

  inline SleepResponsePB& operator=(const SleepResponsePB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SleepResponsePB& default_instance();

  void Swap(SleepResponsePB* other);

  // implements Message ----------------------------------------------

  SleepResponsePB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SleepResponsePB& from);
  void MergeFrom(const SleepResponsePB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ant.rpc_test.SleepResponsePB)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static SleepResponsePB* default_instance_;
};
// -------------------------------------------------------------------

class SendTwoStringsRequestPB : public ::google::protobuf::Message {
 public:
  SendTwoStringsRequestPB();
  virtual ~SendTwoStringsRequestPB();

  SendTwoStringsRequestPB(const SendTwoStringsRequestPB& from);

  inline SendTwoStringsRequestPB& operator=(const SendTwoStringsRequestPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendTwoStringsRequestPB& default_instance();

  void Swap(SendTwoStringsRequestPB* other);

  // implements Message ----------------------------------------------

  SendTwoStringsRequestPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendTwoStringsRequestPB& from);
  void MergeFrom(const SendTwoStringsRequestPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 random_seed = 1;
  inline bool has_random_seed() const;
  inline void clear_random_seed();
  static const int kRandomSeedFieldNumber = 1;
  inline ::google::protobuf::uint32 random_seed() const;
  inline void set_random_seed(::google::protobuf::uint32 value);

  // required uint64 size1 = 2;
  inline bool has_size1() const;
  inline void clear_size1();
  static const int kSize1FieldNumber = 2;
  inline ::google::protobuf::uint64 size1() const;
  inline void set_size1(::google::protobuf::uint64 value);

  // required uint64 size2 = 3;
  inline bool has_size2() const;
  inline void clear_size2();
  static const int kSize2FieldNumber = 3;
  inline ::google::protobuf::uint64 size2() const;
  inline void set_size2(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.SendTwoStringsRequestPB)
 private:
  inline void set_has_random_seed();
  inline void clear_has_random_seed();
  inline void set_has_size1();
  inline void clear_has_size1();
  inline void set_has_size2();
  inline void clear_has_size2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 size1_;
  ::google::protobuf::uint64 size2_;
  ::google::protobuf::uint32 random_seed_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static SendTwoStringsRequestPB* default_instance_;
};
// -------------------------------------------------------------------

class SendTwoStringsResponsePB : public ::google::protobuf::Message {
 public:
  SendTwoStringsResponsePB();
  virtual ~SendTwoStringsResponsePB();

  SendTwoStringsResponsePB(const SendTwoStringsResponsePB& from);

  inline SendTwoStringsResponsePB& operator=(const SendTwoStringsResponsePB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendTwoStringsResponsePB& default_instance();

  void Swap(SendTwoStringsResponsePB* other);

  // implements Message ----------------------------------------------

  SendTwoStringsResponsePB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendTwoStringsResponsePB& from);
  void MergeFrom(const SendTwoStringsResponsePB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sidecar1 = 1;
  inline bool has_sidecar1() const;
  inline void clear_sidecar1();
  static const int kSidecar1FieldNumber = 1;
  inline ::google::protobuf::uint32 sidecar1() const;
  inline void set_sidecar1(::google::protobuf::uint32 value);

  // required uint32 sidecar2 = 2;
  inline bool has_sidecar2() const;
  inline void clear_sidecar2();
  static const int kSidecar2FieldNumber = 2;
  inline ::google::protobuf::uint32 sidecar2() const;
  inline void set_sidecar2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.SendTwoStringsResponsePB)
 private:
  inline void set_has_sidecar1();
  inline void clear_has_sidecar1();
  inline void set_has_sidecar2();
  inline void clear_has_sidecar2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sidecar1_;
  ::google::protobuf::uint32 sidecar2_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static SendTwoStringsResponsePB* default_instance_;
};
// -------------------------------------------------------------------

class EchoRequestPB : public ::google::protobuf::Message {
 public:
  EchoRequestPB();
  virtual ~EchoRequestPB();

  EchoRequestPB(const EchoRequestPB& from);

  inline EchoRequestPB& operator=(const EchoRequestPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EchoRequestPB& default_instance();

  void Swap(EchoRequestPB* other);

  // implements Message ----------------------------------------------

  EchoRequestPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EchoRequestPB& from);
  void MergeFrom(const EchoRequestPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.EchoRequestPB)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static EchoRequestPB* default_instance_;
};
// -------------------------------------------------------------------

class EchoResponsePB : public ::google::protobuf::Message {
 public:
  EchoResponsePB();
  virtual ~EchoResponsePB();

  EchoResponsePB(const EchoResponsePB& from);

  inline EchoResponsePB& operator=(const EchoResponsePB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EchoResponsePB& default_instance();

  void Swap(EchoResponsePB* other);

  // implements Message ----------------------------------------------

  EchoResponsePB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EchoResponsePB& from);
  void MergeFrom(const EchoResponsePB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.EchoResponsePB)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static EchoResponsePB* default_instance_;
};
// -------------------------------------------------------------------

class WhoAmIRequestPB : public ::google::protobuf::Message {
 public:
  WhoAmIRequestPB();
  virtual ~WhoAmIRequestPB();

  WhoAmIRequestPB(const WhoAmIRequestPB& from);

  inline WhoAmIRequestPB& operator=(const WhoAmIRequestPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WhoAmIRequestPB& default_instance();

  void Swap(WhoAmIRequestPB* other);

  // implements Message ----------------------------------------------

  WhoAmIRequestPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WhoAmIRequestPB& from);
  void MergeFrom(const WhoAmIRequestPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ant.rpc_test.WhoAmIRequestPB)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static WhoAmIRequestPB* default_instance_;
};
// -------------------------------------------------------------------

class WhoAmIResponsePB : public ::google::protobuf::Message {
 public:
  WhoAmIResponsePB();
  virtual ~WhoAmIResponsePB();

  WhoAmIResponsePB(const WhoAmIResponsePB& from);

  inline WhoAmIResponsePB& operator=(const WhoAmIResponsePB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WhoAmIResponsePB& default_instance();

  void Swap(WhoAmIResponsePB* other);

  // implements Message ----------------------------------------------

  WhoAmIResponsePB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WhoAmIResponsePB& from);
  void MergeFrom(const WhoAmIResponsePB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ant.rpc.UserInformationPB credentials = 1;
  inline bool has_credentials() const;
  inline void clear_credentials();
  static const int kCredentialsFieldNumber = 1;
  inline const ::ant::rpc::UserInformationPB& credentials() const;
  inline ::ant::rpc::UserInformationPB* mutable_credentials();
  inline ::ant::rpc::UserInformationPB* release_credentials();
  inline void set_allocated_credentials(::ant::rpc::UserInformationPB* credentials);

  // required string address = 2;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 2;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  inline ::std::string* release_address();
  inline void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.WhoAmIResponsePB)
 private:
  inline void set_has_credentials();
  inline void clear_has_credentials();
  inline void set_has_address();
  inline void clear_has_address();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ant::rpc::UserInformationPB* credentials_;
  ::std::string* address_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static WhoAmIResponsePB* default_instance_;
};
// -------------------------------------------------------------------

class CalculatorError : public ::google::protobuf::Message {
 public:
  CalculatorError();
  virtual ~CalculatorError();

  CalculatorError(const CalculatorError& from);

  inline CalculatorError& operator=(const CalculatorError& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CalculatorError& default_instance();

  void Swap(CalculatorError* other);

  // implements Message ----------------------------------------------

  CalculatorError* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CalculatorError& from);
  void MergeFrom(const CalculatorError& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string extra_error_data = 1;
  inline bool has_extra_error_data() const;
  inline void clear_extra_error_data();
  static const int kExtraErrorDataFieldNumber = 1;
  inline const ::std::string& extra_error_data() const;
  inline void set_extra_error_data(const ::std::string& value);
  inline void set_extra_error_data(const char* value);
  inline void set_extra_error_data(const char* value, size_t size);
  inline ::std::string* mutable_extra_error_data();
  inline ::std::string* release_extra_error_data();
  inline void set_allocated_extra_error_data(::std::string* extra_error_data);

  static const int kAppErrorExtFieldNumber = 101;
  static ::google::protobuf::internal::ExtensionIdentifier< ::ant::rpc::ErrorStatusPB,
      ::google::protobuf::internal::MessageTypeTraits< ::ant::rpc_test::CalculatorError >, 11, false >
    app_error_ext;
  // @@protoc_insertion_point(class_scope:ant.rpc_test.CalculatorError)
 private:
  inline void set_has_extra_error_data();
  inline void clear_has_extra_error_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* extra_error_data_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static CalculatorError* default_instance_;
};
// -------------------------------------------------------------------

class PanicRequestPB : public ::google::protobuf::Message {
 public:
  PanicRequestPB();
  virtual ~PanicRequestPB();

  PanicRequestPB(const PanicRequestPB& from);

  inline PanicRequestPB& operator=(const PanicRequestPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PanicRequestPB& default_instance();

  void Swap(PanicRequestPB* other);

  // implements Message ----------------------------------------------

  PanicRequestPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PanicRequestPB& from);
  void MergeFrom(const PanicRequestPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ant.rpc_test.PanicRequestPB)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static PanicRequestPB* default_instance_;
};
// -------------------------------------------------------------------

class PanicResponsePB : public ::google::protobuf::Message {
 public:
  PanicResponsePB();
  virtual ~PanicResponsePB();

  PanicResponsePB(const PanicResponsePB& from);

  inline PanicResponsePB& operator=(const PanicResponsePB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PanicResponsePB& default_instance();

  void Swap(PanicResponsePB* other);

  // implements Message ----------------------------------------------

  PanicResponsePB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PanicResponsePB& from);
  void MergeFrom(const PanicResponsePB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ant.rpc_test.PanicResponsePB)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static PanicResponsePB* default_instance_;
};
// -------------------------------------------------------------------

class TestInvalidResponseRequestPB : public ::google::protobuf::Message {
 public:
  TestInvalidResponseRequestPB();
  virtual ~TestInvalidResponseRequestPB();

  TestInvalidResponseRequestPB(const TestInvalidResponseRequestPB& from);

  inline TestInvalidResponseRequestPB& operator=(const TestInvalidResponseRequestPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestInvalidResponseRequestPB& default_instance();

  void Swap(TestInvalidResponseRequestPB* other);

  // implements Message ----------------------------------------------

  TestInvalidResponseRequestPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestInvalidResponseRequestPB& from);
  void MergeFrom(const TestInvalidResponseRequestPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TestInvalidResponseRequestPB_ErrorType ErrorType;
  static const ErrorType MISSING_REQUIRED_FIELD = TestInvalidResponseRequestPB_ErrorType_MISSING_REQUIRED_FIELD;
  static const ErrorType RESPONSE_TOO_LARGE = TestInvalidResponseRequestPB_ErrorType_RESPONSE_TOO_LARGE;
  static inline bool ErrorType_IsValid(int value) {
    return TestInvalidResponseRequestPB_ErrorType_IsValid(value);
  }
  static const ErrorType ErrorType_MIN =
    TestInvalidResponseRequestPB_ErrorType_ErrorType_MIN;
  static const ErrorType ErrorType_MAX =
    TestInvalidResponseRequestPB_ErrorType_ErrorType_MAX;
  static const int ErrorType_ARRAYSIZE =
    TestInvalidResponseRequestPB_ErrorType_ErrorType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorType_descriptor() {
    return TestInvalidResponseRequestPB_ErrorType_descriptor();
  }
  static inline const ::std::string& ErrorType_Name(ErrorType value) {
    return TestInvalidResponseRequestPB_ErrorType_Name(value);
  }
  static inline bool ErrorType_Parse(const ::std::string& name,
      ErrorType* value) {
    return TestInvalidResponseRequestPB_ErrorType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .ant.rpc_test.TestInvalidResponseRequestPB.ErrorType error_type = 1;
  inline bool has_error_type() const;
  inline void clear_error_type();
  static const int kErrorTypeFieldNumber = 1;
  inline ::ant::rpc_test::TestInvalidResponseRequestPB_ErrorType error_type() const;
  inline void set_error_type(::ant::rpc_test::TestInvalidResponseRequestPB_ErrorType value);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.TestInvalidResponseRequestPB)
 private:
  inline void set_has_error_type();
  inline void clear_has_error_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int error_type_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static TestInvalidResponseRequestPB* default_instance_;
};
// -------------------------------------------------------------------

class TestInvalidResponseResponsePB : public ::google::protobuf::Message {
 public:
  TestInvalidResponseResponsePB();
  virtual ~TestInvalidResponseResponsePB();

  TestInvalidResponseResponsePB(const TestInvalidResponseResponsePB& from);

  inline TestInvalidResponseResponsePB& operator=(const TestInvalidResponseResponsePB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestInvalidResponseResponsePB& default_instance();

  void Swap(TestInvalidResponseResponsePB* other);

  // implements Message ----------------------------------------------

  TestInvalidResponseResponsePB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestInvalidResponseResponsePB& from);
  void MergeFrom(const TestInvalidResponseResponsePB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline const ::std::string& response() const;
  inline void set_response(const ::std::string& value);
  inline void set_response(const char* value);
  inline void set_response(const void* value, size_t size);
  inline ::std::string* mutable_response();
  inline ::std::string* release_response();
  inline void set_allocated_response(::std::string* response);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.TestInvalidResponseResponsePB)
 private:
  inline void set_has_response();
  inline void clear_has_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* response_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static TestInvalidResponseResponsePB* default_instance_;
};
// -------------------------------------------------------------------

class ExactlyOnceRequestPB : public ::google::protobuf::Message {
 public:
  ExactlyOnceRequestPB();
  virtual ~ExactlyOnceRequestPB();

  ExactlyOnceRequestPB(const ExactlyOnceRequestPB& from);

  inline ExactlyOnceRequestPB& operator=(const ExactlyOnceRequestPB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExactlyOnceRequestPB& default_instance();

  void Swap(ExactlyOnceRequestPB* other);

  // implements Message ----------------------------------------------

  ExactlyOnceRequestPB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExactlyOnceRequestPB& from);
  void MergeFrom(const ExactlyOnceRequestPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sleep_for_ms = 1 [default = 0];
  inline bool has_sleep_for_ms() const;
  inline void clear_sleep_for_ms();
  static const int kSleepForMsFieldNumber = 1;
  inline ::google::protobuf::uint32 sleep_for_ms() const;
  inline void set_sleep_for_ms(::google::protobuf::uint32 value);

  // required uint32 value_to_add = 2;
  inline bool has_value_to_add() const;
  inline void clear_value_to_add();
  static const int kValueToAddFieldNumber = 2;
  inline ::google::protobuf::uint32 value_to_add() const;
  inline void set_value_to_add(::google::protobuf::uint32 value);

  // optional bool randomly_fail = 3 [default = false];
  inline bool has_randomly_fail() const;
  inline void clear_randomly_fail();
  static const int kRandomlyFailFieldNumber = 3;
  inline bool randomly_fail() const;
  inline void set_randomly_fail(bool value);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.ExactlyOnceRequestPB)
 private:
  inline void set_has_sleep_for_ms();
  inline void clear_has_sleep_for_ms();
  inline void set_has_value_to_add();
  inline void clear_has_value_to_add();
  inline void set_has_randomly_fail();
  inline void clear_has_randomly_fail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sleep_for_ms_;
  ::google::protobuf::uint32 value_to_add_;
  bool randomly_fail_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static ExactlyOnceRequestPB* default_instance_;
};
// -------------------------------------------------------------------

class ExactlyOnceResponsePB : public ::google::protobuf::Message {
 public:
  ExactlyOnceResponsePB();
  virtual ~ExactlyOnceResponsePB();

  ExactlyOnceResponsePB(const ExactlyOnceResponsePB& from);

  inline ExactlyOnceResponsePB& operator=(const ExactlyOnceResponsePB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExactlyOnceResponsePB& default_instance();

  void Swap(ExactlyOnceResponsePB* other);

  // implements Message ----------------------------------------------

  ExactlyOnceResponsePB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExactlyOnceResponsePB& from);
  void MergeFrom(const ExactlyOnceResponsePB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 current_val = 1;
  inline bool has_current_val() const;
  inline void clear_current_val();
  static const int kCurrentValFieldNumber = 1;
  inline ::google::protobuf::uint32 current_val() const;
  inline void set_current_val(::google::protobuf::uint32 value);

  // required fixed64 current_time_micros = 2;
  inline bool has_current_time_micros() const;
  inline void clear_current_time_micros();
  static const int kCurrentTimeMicrosFieldNumber = 2;
  inline ::google::protobuf::uint64 current_time_micros() const;
  inline void set_current_time_micros(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ant.rpc_test.ExactlyOnceResponsePB)
 private:
  inline void set_has_current_val();
  inline void clear_has_current_val();
  inline void set_has_current_time_micros();
  inline void clear_has_current_time_micros();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 current_time_micros_;
  ::google::protobuf::uint32 current_val_;
  friend void  protobuf_AddDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_AssignDesc_ant_2ftests_2frpc_2frtest_2eproto();
  friend void protobuf_ShutdownFile_ant_2ftests_2frpc_2frtest_2eproto();

  void InitAsDefaultInstance();
  static ExactlyOnceResponsePB* default_instance_;
};
// ===================================================================


// ===================================================================

// AddRequestPB

// required uint32 x = 1;
inline bool AddRequestPB::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddRequestPB::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddRequestPB::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddRequestPB::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 AddRequestPB::x() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.AddRequestPB.x)
  return x_;
}
inline void AddRequestPB::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.AddRequestPB.x)
}

// required uint32 y = 2;
inline bool AddRequestPB::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddRequestPB::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddRequestPB::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddRequestPB::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 AddRequestPB::y() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.AddRequestPB.y)
  return y_;
}
inline void AddRequestPB::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.AddRequestPB.y)
}

// -------------------------------------------------------------------

// AddRequestPartialPB

// required uint32 x = 1;
inline bool AddRequestPartialPB::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddRequestPartialPB::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddRequestPartialPB::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddRequestPartialPB::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 AddRequestPartialPB::x() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.AddRequestPartialPB.x)
  return x_;
}
inline void AddRequestPartialPB::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.AddRequestPartialPB.x)
}

// -------------------------------------------------------------------

// AddResponsePB

// required uint32 result = 1;
inline bool AddResponsePB::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddResponsePB::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddResponsePB::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddResponsePB::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 AddResponsePB::result() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.AddResponsePB.result)
  return result_;
}
inline void AddResponsePB::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.AddResponsePB.result)
}

// -------------------------------------------------------------------

// SleepRequestPB

// required uint32 sleep_micros = 1;
inline bool SleepRequestPB::has_sleep_micros() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SleepRequestPB::set_has_sleep_micros() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SleepRequestPB::clear_has_sleep_micros() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SleepRequestPB::clear_sleep_micros() {
  sleep_micros_ = 0u;
  clear_has_sleep_micros();
}
inline ::google::protobuf::uint32 SleepRequestPB::sleep_micros() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.SleepRequestPB.sleep_micros)
  return sleep_micros_;
}
inline void SleepRequestPB::set_sleep_micros(::google::protobuf::uint32 value) {
  set_has_sleep_micros();
  sleep_micros_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.SleepRequestPB.sleep_micros)
}

// optional bool deferred = 2 [default = false];
inline bool SleepRequestPB::has_deferred() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SleepRequestPB::set_has_deferred() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SleepRequestPB::clear_has_deferred() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SleepRequestPB::clear_deferred() {
  deferred_ = false;
  clear_has_deferred();
}
inline bool SleepRequestPB::deferred() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.SleepRequestPB.deferred)
  return deferred_;
}
inline void SleepRequestPB::set_deferred(bool value) {
  set_has_deferred();
  deferred_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.SleepRequestPB.deferred)
}

// optional bool return_app_error = 3 [default = false];
inline bool SleepRequestPB::has_return_app_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SleepRequestPB::set_has_return_app_error() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SleepRequestPB::clear_has_return_app_error() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SleepRequestPB::clear_return_app_error() {
  return_app_error_ = false;
  clear_has_return_app_error();
}
inline bool SleepRequestPB::return_app_error() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.SleepRequestPB.return_app_error)
  return return_app_error_;
}
inline void SleepRequestPB::set_return_app_error(bool value) {
  set_has_return_app_error();
  return_app_error_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.SleepRequestPB.return_app_error)
}

// optional bool client_timeout_defined = 4 [default = false];
inline bool SleepRequestPB::has_client_timeout_defined() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SleepRequestPB::set_has_client_timeout_defined() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SleepRequestPB::clear_has_client_timeout_defined() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SleepRequestPB::clear_client_timeout_defined() {
  client_timeout_defined_ = false;
  clear_has_client_timeout_defined();
}
inline bool SleepRequestPB::client_timeout_defined() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.SleepRequestPB.client_timeout_defined)
  return client_timeout_defined_;
}
inline void SleepRequestPB::set_client_timeout_defined(bool value) {
  set_has_client_timeout_defined();
  client_timeout_defined_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.SleepRequestPB.client_timeout_defined)
}

// -------------------------------------------------------------------

// SleepResponsePB

// -------------------------------------------------------------------

// SendTwoStringsRequestPB

// required uint32 random_seed = 1;
inline bool SendTwoStringsRequestPB::has_random_seed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendTwoStringsRequestPB::set_has_random_seed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendTwoStringsRequestPB::clear_has_random_seed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendTwoStringsRequestPB::clear_random_seed() {
  random_seed_ = 0u;
  clear_has_random_seed();
}
inline ::google::protobuf::uint32 SendTwoStringsRequestPB::random_seed() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.SendTwoStringsRequestPB.random_seed)
  return random_seed_;
}
inline void SendTwoStringsRequestPB::set_random_seed(::google::protobuf::uint32 value) {
  set_has_random_seed();
  random_seed_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.SendTwoStringsRequestPB.random_seed)
}

// required uint64 size1 = 2;
inline bool SendTwoStringsRequestPB::has_size1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendTwoStringsRequestPB::set_has_size1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendTwoStringsRequestPB::clear_has_size1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendTwoStringsRequestPB::clear_size1() {
  size1_ = GOOGLE_ULONGLONG(0);
  clear_has_size1();
}
inline ::google::protobuf::uint64 SendTwoStringsRequestPB::size1() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.SendTwoStringsRequestPB.size1)
  return size1_;
}
inline void SendTwoStringsRequestPB::set_size1(::google::protobuf::uint64 value) {
  set_has_size1();
  size1_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.SendTwoStringsRequestPB.size1)
}

// required uint64 size2 = 3;
inline bool SendTwoStringsRequestPB::has_size2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendTwoStringsRequestPB::set_has_size2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendTwoStringsRequestPB::clear_has_size2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendTwoStringsRequestPB::clear_size2() {
  size2_ = GOOGLE_ULONGLONG(0);
  clear_has_size2();
}
inline ::google::protobuf::uint64 SendTwoStringsRequestPB::size2() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.SendTwoStringsRequestPB.size2)
  return size2_;
}
inline void SendTwoStringsRequestPB::set_size2(::google::protobuf::uint64 value) {
  set_has_size2();
  size2_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.SendTwoStringsRequestPB.size2)
}

// -------------------------------------------------------------------

// SendTwoStringsResponsePB

// required uint32 sidecar1 = 1;
inline bool SendTwoStringsResponsePB::has_sidecar1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendTwoStringsResponsePB::set_has_sidecar1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendTwoStringsResponsePB::clear_has_sidecar1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendTwoStringsResponsePB::clear_sidecar1() {
  sidecar1_ = 0u;
  clear_has_sidecar1();
}
inline ::google::protobuf::uint32 SendTwoStringsResponsePB::sidecar1() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.SendTwoStringsResponsePB.sidecar1)
  return sidecar1_;
}
inline void SendTwoStringsResponsePB::set_sidecar1(::google::protobuf::uint32 value) {
  set_has_sidecar1();
  sidecar1_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.SendTwoStringsResponsePB.sidecar1)
}

// required uint32 sidecar2 = 2;
inline bool SendTwoStringsResponsePB::has_sidecar2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendTwoStringsResponsePB::set_has_sidecar2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendTwoStringsResponsePB::clear_has_sidecar2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendTwoStringsResponsePB::clear_sidecar2() {
  sidecar2_ = 0u;
  clear_has_sidecar2();
}
inline ::google::protobuf::uint32 SendTwoStringsResponsePB::sidecar2() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.SendTwoStringsResponsePB.sidecar2)
  return sidecar2_;
}
inline void SendTwoStringsResponsePB::set_sidecar2(::google::protobuf::uint32 value) {
  set_has_sidecar2();
  sidecar2_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.SendTwoStringsResponsePB.sidecar2)
}

// -------------------------------------------------------------------

// EchoRequestPB

// required string data = 1;
inline bool EchoRequestPB::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EchoRequestPB::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EchoRequestPB::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EchoRequestPB::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& EchoRequestPB::data() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.EchoRequestPB.data)
  return *data_;
}
inline void EchoRequestPB::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:ant.rpc_test.EchoRequestPB.data)
}
inline void EchoRequestPB::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:ant.rpc_test.EchoRequestPB.data)
}
inline void EchoRequestPB::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ant.rpc_test.EchoRequestPB.data)
}
inline ::std::string* EchoRequestPB::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ant.rpc_test.EchoRequestPB.data)
  return data_;
}
inline ::std::string* EchoRequestPB::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EchoRequestPB::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ant.rpc_test.EchoRequestPB.data)
}

// -------------------------------------------------------------------

// EchoResponsePB

// required string data = 1;
inline bool EchoResponsePB::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EchoResponsePB::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EchoResponsePB::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EchoResponsePB::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& EchoResponsePB::data() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.EchoResponsePB.data)
  return *data_;
}
inline void EchoResponsePB::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:ant.rpc_test.EchoResponsePB.data)
}
inline void EchoResponsePB::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:ant.rpc_test.EchoResponsePB.data)
}
inline void EchoResponsePB::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ant.rpc_test.EchoResponsePB.data)
}
inline ::std::string* EchoResponsePB::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ant.rpc_test.EchoResponsePB.data)
  return data_;
}
inline ::std::string* EchoResponsePB::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EchoResponsePB::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ant.rpc_test.EchoResponsePB.data)
}

// -------------------------------------------------------------------

// WhoAmIRequestPB

// -------------------------------------------------------------------

// WhoAmIResponsePB

// required .ant.rpc.UserInformationPB credentials = 1;
inline bool WhoAmIResponsePB::has_credentials() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WhoAmIResponsePB::set_has_credentials() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WhoAmIResponsePB::clear_has_credentials() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WhoAmIResponsePB::clear_credentials() {
  if (credentials_ != NULL) credentials_->::ant::rpc::UserInformationPB::Clear();
  clear_has_credentials();
}
inline const ::ant::rpc::UserInformationPB& WhoAmIResponsePB::credentials() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.WhoAmIResponsePB.credentials)
  return credentials_ != NULL ? *credentials_ : *default_instance_->credentials_;
}
inline ::ant::rpc::UserInformationPB* WhoAmIResponsePB::mutable_credentials() {
  set_has_credentials();
  if (credentials_ == NULL) credentials_ = new ::ant::rpc::UserInformationPB;
  // @@protoc_insertion_point(field_mutable:ant.rpc_test.WhoAmIResponsePB.credentials)
  return credentials_;
}
inline ::ant::rpc::UserInformationPB* WhoAmIResponsePB::release_credentials() {
  clear_has_credentials();
  ::ant::rpc::UserInformationPB* temp = credentials_;
  credentials_ = NULL;
  return temp;
}
inline void WhoAmIResponsePB::set_allocated_credentials(::ant::rpc::UserInformationPB* credentials) {
  delete credentials_;
  credentials_ = credentials;
  if (credentials) {
    set_has_credentials();
  } else {
    clear_has_credentials();
  }
  // @@protoc_insertion_point(field_set_allocated:ant.rpc_test.WhoAmIResponsePB.credentials)
}

// required string address = 2;
inline bool WhoAmIResponsePB::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WhoAmIResponsePB::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WhoAmIResponsePB::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WhoAmIResponsePB::clear_address() {
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_->clear();
  }
  clear_has_address();
}
inline const ::std::string& WhoAmIResponsePB::address() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.WhoAmIResponsePB.address)
  return *address_;
}
inline void WhoAmIResponsePB::set_address(const ::std::string& value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(value);
  // @@protoc_insertion_point(field_set:ant.rpc_test.WhoAmIResponsePB.address)
}
inline void WhoAmIResponsePB::set_address(const char* value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(value);
  // @@protoc_insertion_point(field_set_char:ant.rpc_test.WhoAmIResponsePB.address)
}
inline void WhoAmIResponsePB::set_address(const char* value, size_t size) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ant.rpc_test.WhoAmIResponsePB.address)
}
inline ::std::string* WhoAmIResponsePB::mutable_address() {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ant.rpc_test.WhoAmIResponsePB.address)
  return address_;
}
inline ::std::string* WhoAmIResponsePB::release_address() {
  clear_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = address_;
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WhoAmIResponsePB::set_allocated_address(::std::string* address) {
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete address_;
  }
  if (address) {
    set_has_address();
    address_ = address;
  } else {
    clear_has_address();
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ant.rpc_test.WhoAmIResponsePB.address)
}

// -------------------------------------------------------------------

// CalculatorError

// required string extra_error_data = 1;
inline bool CalculatorError::has_extra_error_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CalculatorError::set_has_extra_error_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CalculatorError::clear_has_extra_error_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CalculatorError::clear_extra_error_data() {
  if (extra_error_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_error_data_->clear();
  }
  clear_has_extra_error_data();
}
inline const ::std::string& CalculatorError::extra_error_data() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.CalculatorError.extra_error_data)
  return *extra_error_data_;
}
inline void CalculatorError::set_extra_error_data(const ::std::string& value) {
  set_has_extra_error_data();
  if (extra_error_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_error_data_ = new ::std::string;
  }
  extra_error_data_->assign(value);
  // @@protoc_insertion_point(field_set:ant.rpc_test.CalculatorError.extra_error_data)
}
inline void CalculatorError::set_extra_error_data(const char* value) {
  set_has_extra_error_data();
  if (extra_error_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_error_data_ = new ::std::string;
  }
  extra_error_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:ant.rpc_test.CalculatorError.extra_error_data)
}
inline void CalculatorError::set_extra_error_data(const char* value, size_t size) {
  set_has_extra_error_data();
  if (extra_error_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_error_data_ = new ::std::string;
  }
  extra_error_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ant.rpc_test.CalculatorError.extra_error_data)
}
inline ::std::string* CalculatorError::mutable_extra_error_data() {
  set_has_extra_error_data();
  if (extra_error_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_error_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ant.rpc_test.CalculatorError.extra_error_data)
  return extra_error_data_;
}
inline ::std::string* CalculatorError::release_extra_error_data() {
  clear_has_extra_error_data();
  if (extra_error_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extra_error_data_;
    extra_error_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CalculatorError::set_allocated_extra_error_data(::std::string* extra_error_data) {
  if (extra_error_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extra_error_data_;
  }
  if (extra_error_data) {
    set_has_extra_error_data();
    extra_error_data_ = extra_error_data;
  } else {
    clear_has_extra_error_data();
    extra_error_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ant.rpc_test.CalculatorError.extra_error_data)
}

// -------------------------------------------------------------------

// PanicRequestPB

// -------------------------------------------------------------------

// PanicResponsePB

// -------------------------------------------------------------------

// TestInvalidResponseRequestPB

// required .ant.rpc_test.TestInvalidResponseRequestPB.ErrorType error_type = 1;
inline bool TestInvalidResponseRequestPB::has_error_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestInvalidResponseRequestPB::set_has_error_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestInvalidResponseRequestPB::clear_has_error_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestInvalidResponseRequestPB::clear_error_type() {
  error_type_ = 1;
  clear_has_error_type();
}
inline ::ant::rpc_test::TestInvalidResponseRequestPB_ErrorType TestInvalidResponseRequestPB::error_type() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.TestInvalidResponseRequestPB.error_type)
  return static_cast< ::ant::rpc_test::TestInvalidResponseRequestPB_ErrorType >(error_type_);
}
inline void TestInvalidResponseRequestPB::set_error_type(::ant::rpc_test::TestInvalidResponseRequestPB_ErrorType value) {
  assert(::ant::rpc_test::TestInvalidResponseRequestPB_ErrorType_IsValid(value));
  set_has_error_type();
  error_type_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.TestInvalidResponseRequestPB.error_type)
}

// -------------------------------------------------------------------

// TestInvalidResponseResponsePB

// required bytes response = 1;
inline bool TestInvalidResponseResponsePB::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestInvalidResponseResponsePB::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestInvalidResponseResponsePB::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestInvalidResponseResponsePB::clear_response() {
  if (response_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    response_->clear();
  }
  clear_has_response();
}
inline const ::std::string& TestInvalidResponseResponsePB::response() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.TestInvalidResponseResponsePB.response)
  return *response_;
}
inline void TestInvalidResponseResponsePB::set_response(const ::std::string& value) {
  set_has_response();
  if (response_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    response_ = new ::std::string;
  }
  response_->assign(value);
  // @@protoc_insertion_point(field_set:ant.rpc_test.TestInvalidResponseResponsePB.response)
}
inline void TestInvalidResponseResponsePB::set_response(const char* value) {
  set_has_response();
  if (response_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    response_ = new ::std::string;
  }
  response_->assign(value);
  // @@protoc_insertion_point(field_set_char:ant.rpc_test.TestInvalidResponseResponsePB.response)
}
inline void TestInvalidResponseResponsePB::set_response(const void* value, size_t size) {
  set_has_response();
  if (response_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    response_ = new ::std::string;
  }
  response_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ant.rpc_test.TestInvalidResponseResponsePB.response)
}
inline ::std::string* TestInvalidResponseResponsePB::mutable_response() {
  set_has_response();
  if (response_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    response_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ant.rpc_test.TestInvalidResponseResponsePB.response)
  return response_;
}
inline ::std::string* TestInvalidResponseResponsePB::release_response() {
  clear_has_response();
  if (response_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = response_;
    response_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TestInvalidResponseResponsePB::set_allocated_response(::std::string* response) {
  if (response_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete response_;
  }
  if (response) {
    set_has_response();
    response_ = response;
  } else {
    clear_has_response();
    response_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ant.rpc_test.TestInvalidResponseResponsePB.response)
}

// -------------------------------------------------------------------

// ExactlyOnceRequestPB

// optional uint32 sleep_for_ms = 1 [default = 0];
inline bool ExactlyOnceRequestPB::has_sleep_for_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExactlyOnceRequestPB::set_has_sleep_for_ms() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExactlyOnceRequestPB::clear_has_sleep_for_ms() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExactlyOnceRequestPB::clear_sleep_for_ms() {
  sleep_for_ms_ = 0u;
  clear_has_sleep_for_ms();
}
inline ::google::protobuf::uint32 ExactlyOnceRequestPB::sleep_for_ms() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.ExactlyOnceRequestPB.sleep_for_ms)
  return sleep_for_ms_;
}
inline void ExactlyOnceRequestPB::set_sleep_for_ms(::google::protobuf::uint32 value) {
  set_has_sleep_for_ms();
  sleep_for_ms_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.ExactlyOnceRequestPB.sleep_for_ms)
}

// required uint32 value_to_add = 2;
inline bool ExactlyOnceRequestPB::has_value_to_add() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExactlyOnceRequestPB::set_has_value_to_add() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExactlyOnceRequestPB::clear_has_value_to_add() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExactlyOnceRequestPB::clear_value_to_add() {
  value_to_add_ = 0u;
  clear_has_value_to_add();
}
inline ::google::protobuf::uint32 ExactlyOnceRequestPB::value_to_add() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.ExactlyOnceRequestPB.value_to_add)
  return value_to_add_;
}
inline void ExactlyOnceRequestPB::set_value_to_add(::google::protobuf::uint32 value) {
  set_has_value_to_add();
  value_to_add_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.ExactlyOnceRequestPB.value_to_add)
}

// optional bool randomly_fail = 3 [default = false];
inline bool ExactlyOnceRequestPB::has_randomly_fail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExactlyOnceRequestPB::set_has_randomly_fail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExactlyOnceRequestPB::clear_has_randomly_fail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExactlyOnceRequestPB::clear_randomly_fail() {
  randomly_fail_ = false;
  clear_has_randomly_fail();
}
inline bool ExactlyOnceRequestPB::randomly_fail() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.ExactlyOnceRequestPB.randomly_fail)
  return randomly_fail_;
}
inline void ExactlyOnceRequestPB::set_randomly_fail(bool value) {
  set_has_randomly_fail();
  randomly_fail_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.ExactlyOnceRequestPB.randomly_fail)
}

// -------------------------------------------------------------------

// ExactlyOnceResponsePB

// required uint32 current_val = 1;
inline bool ExactlyOnceResponsePB::has_current_val() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExactlyOnceResponsePB::set_has_current_val() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExactlyOnceResponsePB::clear_has_current_val() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExactlyOnceResponsePB::clear_current_val() {
  current_val_ = 0u;
  clear_has_current_val();
}
inline ::google::protobuf::uint32 ExactlyOnceResponsePB::current_val() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.ExactlyOnceResponsePB.current_val)
  return current_val_;
}
inline void ExactlyOnceResponsePB::set_current_val(::google::protobuf::uint32 value) {
  set_has_current_val();
  current_val_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.ExactlyOnceResponsePB.current_val)
}

// required fixed64 current_time_micros = 2;
inline bool ExactlyOnceResponsePB::has_current_time_micros() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExactlyOnceResponsePB::set_has_current_time_micros() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExactlyOnceResponsePB::clear_has_current_time_micros() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExactlyOnceResponsePB::clear_current_time_micros() {
  current_time_micros_ = GOOGLE_ULONGLONG(0);
  clear_has_current_time_micros();
}
inline ::google::protobuf::uint64 ExactlyOnceResponsePB::current_time_micros() const {
  // @@protoc_insertion_point(field_get:ant.rpc_test.ExactlyOnceResponsePB.current_time_micros)
  return current_time_micros_;
}
inline void ExactlyOnceResponsePB::set_current_time_micros(::google::protobuf::uint64 value) {
  set_has_current_time_micros();
  current_time_micros_ = value;
  // @@protoc_insertion_point(field_set:ant.rpc_test.ExactlyOnceResponsePB.current_time_micros)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc_test
}  // namespace ant

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ant::rpc_test::TestInvalidResponseRequestPB_ErrorType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ant::rpc_test::TestInvalidResponseRequestPB_ErrorType>() {
  return ::ant::rpc_test::TestInvalidResponseRequestPB_ErrorType_descriptor();
}
template <> struct is_proto_enum< ::ant::rpc_test::FeatureFlags> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ant::rpc_test::FeatureFlags>() {
  return ::ant::rpc_test::FeatureFlags_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ant_2ftests_2frpc_2frtest_2eproto__INCLUDED
