// THIS FILE IS AUTOGENERATED FROM ant/server/server_base.proto

#ifndef KUDU_RPC_SERVER_BASE_PROXY_DOT_H
#define KUDU_RPC_SERVER_BASE_PROXY_DOT_H

#include "ant/server/server_base.pb.h"

#include "ant/rpc/proxy.h"
#include "ant/util/status.h"

namespace ant { class Sockaddr; }
namespace ant { namespace rpc { class UserCredentials; } }
namespace ant {
namespace server {


class GenericServiceProxy : public ::ant::rpc::Proxy {
 public:
  GenericServiceProxy(const std::shared_ptr< ::ant::rpc::Messenger>
                &messenger, const ::ant::Sockaddr &sockaddr);
  ~GenericServiceProxy();


  ::ant::Status SetFlag(const SetFlagRequestPB &req, SetFlagResponsePB *resp,
                          ::ant::rpc::RpcController *controller);
  void SetFlagAsync(const SetFlagRequestPB &req,
                       SetFlagResponsePB *response,
                       ::ant::rpc::RpcController *controller,
                       const ::ant::rpc::ResponseCallback &callback);

  ::ant::Status FlushCoverage(const FlushCoverageRequestPB &req, FlushCoverageResponsePB *resp,
                          ::ant::rpc::RpcController *controller);
  void FlushCoverageAsync(const FlushCoverageRequestPB &req,
                       FlushCoverageResponsePB *response,
                       ::ant::rpc::RpcController *controller,
                       const ::ant::rpc::ResponseCallback &callback);

  ::ant::Status ServerClock(const ServerClockRequestPB &req, ServerClockResponsePB *resp,
                          ::ant::rpc::RpcController *controller);
  void ServerClockAsync(const ServerClockRequestPB &req,
                       ServerClockResponsePB *response,
                       ::ant::rpc::RpcController *controller,
                       const ::ant::rpc::ResponseCallback &callback);

  ::ant::Status SetServerWallClockForTests(const SetServerWallClockForTestsRequestPB &req, SetServerWallClockForTestsResponsePB *resp,
                          ::ant::rpc::RpcController *controller);
  void SetServerWallClockForTestsAsync(const SetServerWallClockForTestsRequestPB &req,
                       SetServerWallClockForTestsResponsePB *response,
                       ::ant::rpc::RpcController *controller,
                       const ::ant::rpc::ResponseCallback &callback);

  ::ant::Status GetStatus(const GetStatusRequestPB &req, GetStatusResponsePB *resp,
                          ::ant::rpc::RpcController *controller);
  void GetStatusAsync(const GetStatusRequestPB &req,
                       GetStatusResponsePB *response,
                       ::ant::rpc::RpcController *controller,
                       const ::ant::rpc::ResponseCallback &callback);
};

} // namespace server
} // namespace ant

#endif
